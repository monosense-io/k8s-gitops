name: Validate Cilium Core Manifests

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install tooling (flux, kustomize, kubeconform, yq, rg)
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y ripgrep jq ca-certificates curl tar
          # flux
          curl -s https://fluxcd.io/install.sh | sudo bash
          flux --version
          # kustomize
          curl -sS https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh | bash
          sudo mv ./kustomize /usr/local/bin/kustomize
          kustomize version
          # kubeconform
          curl -sL https://github.com/yannh/kubeconform/releases/download/v0.7.0/kubeconform-linux-amd64.tar.gz | tar xz
          sudo mv kubeconform /usr/local/bin/
          kubeconform -v || true
          # yq
          curl -sL https://github.com/mikefarah/yq/releases/download/v4.47.2/yq_linux_amd64 -o yq
          chmod +x yq && sudo mv yq /usr/local/bin/
          yq --version

      - name: Setup Helm
        uses: azure/setup-helm@v4

      - name: Run local validations
        run: scripts/validate-cilium-core.sh

      - name: OCI preflight for Cilium chart
        env:
          HELM_EXPERIMENTAL_OCI: "1"
        run: |
          set -euo pipefail
          VER=$(yq -r '.data.CILIUM_VERSION' kubernetes/clusters/infra/cluster-settings.yaml)
          echo "Checking mirror ghcr.io/home-operations/charts-mirror/cilium:${VER}"
          if helm pull oci://ghcr.io/home-operations/charts-mirror/cilium --version "$VER" >/dev/null 2>&1; then
            echo "Mirror OK"
          else
            echo "Mirror unavailable; checking official ghcr.io/cilium/charts/cilium:${VER}"
            if helm pull oci://ghcr.io/cilium/charts/cilium --version "$VER" >/dev/null 2>&1; then
              echo "Official OK"
            else
              echo "::error::Neither mirror nor official registry has version $VER" && exit 1
            fi
          fi

      - name: Upload validation artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cilium-core-validation
          path: |
            /tmp/cilium-core.manifests.yaml
            /tmp/cilium-core.kubeconform.txt
            /tmp/flux-build-infra.yaml
            /tmp/flux-build-apps.yaml

