---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: cluster-apps-settings
  namespace: flux-system
  labels:
    app.kubernetes.io/managed-by: flux
    cluster: apps
spec:
  interval: 10m
  path: ./kubernetes/clusters/apps
  prune: false  # Don't prune cluster settings
  sourceRef:
    kind: GitRepository
    name: flux-system
  patches:
    - patch: |-
        - op: add
          path: /data/placeholder
          value: placeholder
      target:
        kind: ConfigMap
        name: cluster-settings
---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: flux-repositories
  namespace: flux-system
  labels:
    app.kubernetes.io/managed-by: flux
    cluster: apps
spec:
  dependsOn:
    - name: cluster-apps-settings
      namespace: flux-system
  interval: 1h
  path: ./kubernetes/infrastructure/repositories
  prune: true
  wait: true
  timeout: 5m
  sourceRef:
    kind: GitRepository
    name: flux-system
  targetNamespace: flux-system
  postBuild:
    substituteFrom:
      - kind: ConfigMap
        name: cluster-settings
        optional: false
---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: cluster-apps-infrastructure
  namespace: flux-system
  labels:
    app.kubernetes.io/managed-by: flux
    cluster: apps
spec:
  dependsOn:
    - name: flux-repositories
      namespace: flux-system
  interval: 10m
  path: ./kubernetes/infrastructure
  prune: true
  wait: false
  timeout: 5m
  sourceRef:
    kind: GitRepository
    name: flux-system
  postBuild:
    substituteFrom:
      - kind: ConfigMap
        name: cluster-settings
        optional: false
  patches:
    # Apply default HelmRelease settings to all nested Kustomizations
    - patch: |-
        apiVersion: kustomize.toolkit.fluxcd.io/v1
        kind: Kustomization
        metadata:
          name: not-used
        spec:
          patches:
            - patch: |-
                apiVersion: helm.toolkit.fluxcd.io/v2
                kind: HelmRelease
                metadata:
                  name: not-used
                spec:
                  install:
                    crds: CreateReplace
                    remediation:
                      retries: 3
                    strategy:
                      name: RetryOnFailure
                  rollback:
                    cleanupOnFail: true
                    recreate: true
                  timeout: 10m
                  upgrade:
                    cleanupOnFail: true
                    crds: CreateReplace
                    remediation:
                      retries: 2
                      strategy: rollback
                    strategy:
                      name: RemediateOnFailure
              target:
                group: helm.toolkit.fluxcd.io
                kind: HelmRelease
      target:
        group: kustomize.toolkit.fluxcd.io
        kind: Kustomization
---
# OpenEBS local storage (apps cluster)
# yaml-language-server: $schema=https://kube-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: openebs
  namespace: flux-system
  labels:
    app.kubernetes.io/managed-by: flux
    cluster: apps
spec:
  dependsOn:
    - name: flux-repositories
      namespace: flux-system
  interval: 10m
  timeout: 5m
  retryInterval: 1m
  path: ./kubernetes/infrastructure/storage/openebs
  prune: true
  wait: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: openebs-system
  healthChecks:
    - apiVersion: apps/v1
      kind: DaemonSet
      name: openebs-localpv-provisioner
      namespace: openebs-system
  postBuild:
    substituteFrom:
      - kind: ConfigMap
        name: cluster-settings
        optional: false
---
# Rook-Ceph Operator (apps cluster)
# yaml-language-server: $schema=https://kube-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: rook-ceph-operator
  namespace: flux-system
  labels:
    app.kubernetes.io/managed-by: flux
    cluster: apps
spec:
  dependsOn:
    - name: flux-repositories
      namespace: flux-system
  interval: 10m
  timeout: 5m
  retryInterval: 1m
  path: ./kubernetes/infrastructure/storage/rook-ceph/operator
  prune: true
  wait: false
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: rook-ceph
  healthChecks:
    - apiVersion: apps/v1
      kind: Deployment
      name: rook-ceph-operator
      namespace: rook-ceph
  postBuild:
    substituteFrom:
      - kind: ConfigMap
        name: cluster-settings
        optional: false
---
# Rook-Ceph Cluster (apps cluster)
# yaml-language-server: $schema=https://kube-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: rook-ceph-cluster
  namespace: flux-system
  labels:
    app.kubernetes.io/managed-by: flux
    cluster: apps
spec:
  dependsOn:
    - name: rook-ceph-operator
      namespace: flux-system
  interval: 10m
  timeout: 10m
  retryInterval: 1m
  path: ./kubernetes/infrastructure/storage/rook-ceph/cluster
  prune: true
  wait: false  # Ceph cluster can take time to initialize
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: rook-ceph
  postBuild:
    substituteFrom:
      - kind: ConfigMap
        name: cluster-settings
        optional: false
  patches:
    # Apply apps-specific Rook-Ceph node configuration with device paths
    - patch: |-
        - op: replace
          path: /spec/storage/nodes
          value:
            - name: apps-01
              devices:
                - name: "/dev/disk/by-id/nvme-TEAM_TM8FP6001T_TPBF2312120030301178"
              config:
                osdsPerDevice: "1"
                crushRoot: default
                databaseSizeMB: "0"
                walSizeMB: "0"
                encryptedDevice: "false"
                preferredDeviceClass: ${ROOK_CEPH_OSD_DEVICE_CLASS}
            - name: apps-02
              devices:
                - name: "/dev/disk/by-id/nvme-TEAM_TM8FP6001T_TPBF2312120030301595"
              config:
                osdsPerDevice: "1"
                crushRoot: default
                databaseSizeMB: "0"
                walSizeMB: "0"
                encryptedDevice: "false"
                preferredDeviceClass: ${ROOK_CEPH_OSD_DEVICE_CLASS}
            - name: apps-03
              devices:
                - name: "/dev/disk/by-id/nvme-PNY_CS1031_1TB_SSD_PNY2301230103010065A"
              config:
                osdsPerDevice: "1"
                crushRoot: default
                databaseSizeMB: "0"
                walSizeMB: "0"
                encryptedDevice: "false"
                preferredDeviceClass: ${ROOK_CEPH_OSD_DEVICE_CLASS}
      target:
        group: ceph.rook.io
        version: v1
        kind: CephCluster
        name: ${ROOK_CEPH_CLUSTER_NAME}
        namespace: ${ROOK_CEPH_NAMESPACE}
# apiVersion: kustomize.toolkit.fluxcd.io/v1
# kind: Kustomization
# metadata:
#   name: openebs
#   namespace: flux-system
#   labels:
#     app.kubernetes.io/managed-by: flux
#     cluster: apps
# spec:
#   dependsOn:
#     - name: flux-repositories
#       namespace: flux-system
#   interval: 10m
#   timeout: 5m
#   retryInterval: 1m
#   path: ./kubernetes/infrastructure/storage/openebs
#   prune: true
#   wait: true
#   sourceRef:
#     kind: GitRepository
#     name: flux-system
#     namespace: flux-system
#   targetNamespace: openebs-system
#   healthChecks:
#     - apiVersion: apps/v1
#       kind: DaemonSet
#       name: openebs-localpv-provisioner
#       namespace: openebs-system
#   postBuild:
#     substituteFrom:
#       - kind: ConfigMap
#         name: cluster-settings
#         optional: false
# ---
# # Rook-Ceph Operator (DISABLED - enable for cross-cluster RBD client)
# # yaml-language-server: $schema=https://kube-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
# apiVersion: kustomize.toolkit.fluxcd.io/v1
# kind: Kustomization
# metadata:
#   name: rook-ceph-operator
#   namespace: flux-system
#   labels:
#     app.kubernetes.io/managed-by: flux
#     cluster: apps
# spec:
#   interval: 10m
#   timeout: 5m
#   retryInterval: 1m
#   path: ./kubernetes/infrastructure/storage/rook-ceph/operator
#   prune: true
#   wait: false
#   sourceRef:
#     kind: GitRepository
#     name: flux-system
#     namespace: flux-system
#   targetNamespace: rook-ceph
#   healthChecks:
#     - apiVersion: apps/v1
#       kind: Deployment
#       name: rook-ceph-operator
#       namespace: rook-ceph
#   postBuild:
#     substituteFrom:
#       - kind: ConfigMap
#         name: cluster-settings
#         optional: false
# ---
# # Rook-Ceph Cluster (DISABLED - apps cluster does NOT run Ceph cluster)
# # NOTE: If cross-cluster RBD is needed, only deploy operator (not cluster)
# # yaml-language-server: $schema=https://kube-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
# apiVersion: kustomize.toolkit.fluxcd.io/v1
# kind: Kustomization
# metadata:
#   name: rook-ceph-cluster
#   namespace: flux-system
#   labels:
#     app.kubernetes.io/managed-by: flux
#     cluster: apps
# spec:
#   dependsOn:
#     - name: rook-ceph-operator
#       namespace: flux-system
#   interval: 10m
#   timeout: 10m
#   retryInterval: 1m
#   path: ./kubernetes/infrastructure/storage/rook-ceph/cluster
#   prune: true
#   wait: false  # Ceph cluster can take time to initialize
#   sourceRef:
#     kind: GitRepository
#     name: flux-system
#     namespace: flux-system
#   targetNamespace: rook-ceph
#   postBuild:
#     substituteFrom:
#       - kind: ConfigMap
#         name: cluster-settings
#         optional: false
#   patches:
#     # Apply apps-specific Rook-Ceph node configuration with device paths
#     - patch: |-
#         - op: replace
#           path: /spec/storage/nodes
#           value:
#             - name: apps-01
#               devices:
#                 - name: "/dev/disk/by-id/nvme-TEAM_TM8FP6001T_TPBF2312120030301178"
#               config:
#                 osdsPerDevice: "1"
#                 crushRoot: default
#                 databaseSizeMB: "0"
#                 walSizeMB: "0"
#                 encryptedDevice: "false"
#                 preferredDeviceClass: ${ROOK_CEPH_OSD_DEVICE_CLASS}
#             - name: apps-02
#               devices:
#                 - name: "/dev/disk/by-id/nvme-TEAM_TM8FP6001T_TPBF2312120030301595"
#               config:
#                 osdsPerDevice: "1"
#                 crushRoot: default
#                 databaseSizeMB: "0"
#                 walSizeMB: "0"
#                 encryptedDevice: "false"
#                 preferredDeviceClass: ${ROOK_CEPH_OSD_DEVICE_CLASS}
#             - name: apps-03
#               devices:
#                 - name: "/dev/disk/by-id/nvme-PNY_CS1031_1TB_SSD_PNY2301230103010065A"
#               config:
#                 osdsPerDevice: "1"
#                 crushRoot: default
#                 databaseSizeMB: "0"
#                 walSizeMB: "0"
#                 encryptedDevice: "false"
#                 preferredDeviceClass: ${ROOK_CEPH_OSD_DEVICE_CLASS}
#       target:
#         group: ceph.rook.io
#         version: v1
#         kind: CephCluster
#         name: rook-ceph
#         namespace: rook-ceph
