---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: victoria-metrics-k8s-stack
  namespace: observability
spec:
  interval: 30m
  ref:
    tag: 0.38.3
  url: oci://ghcr.io/victoriametrics/helm-charts/victoria-metrics-k8s-stack
---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: victoria-metrics-global
  namespace: observability
spec:
  interval: 15m
  chartRef:
    kind: OCIRepository
    name: victoria-metrics-k8s-stack
    namespace: observability
  install:
    remediation:
      retries: 3
    crds: CreateReplace
    createNamespace: true
  upgrade:
    remediation:
      retries: 2
    strategy: rollback
    cleanupOnFail: true
  rollback:
    recreate: true
    cleanupOnFail: true
  values:
    namespaceOverride: observability
    fullnameOverride: victoria-metrics-global
    victoria-metrics-operator:
      createCRD: true
    # Disable local components - we only need global cluster
    grafana:
      enabled: false
    alertmanager:
      enabled: true
      config:
        global:
          resolve_timeout: 5m
          smtp_smarthost: 'localhost:587'
          smtp_from: 'alerts@monosense.io'
        route:
          group_by: ['alertname', 'cluster', 'severity']
          group_wait: 10s
          group_interval: 10s
          repeat_interval: 1h
          receiver: 'default'
          routes:
            # Cross-cluster critical alerts
            - match:
                severity: critical
                scope: global
              receiver: 'global-critical'
              continue: true
            # Business impact alerts
            - match:
                severity: critical
                business_impact: high
              receiver: 'business-alerts'
              continue: true
            # Cluster-specific alerts
            - match:
                cluster: infra
              receiver: 'infra-alerts'
              continue: true
            - match:
                cluster: apps
              receiver: 'apps-alerts'
              continue: true
        inhibit_rules:
          # Inhibit downstream alerts if cluster is down
          - source_match:
              alertname: ClusterDown
            target_match:
              cluster: infra
            equal: ['cluster']
          - source_match:
              alertname: ClusterDown
            target_match:
              cluster: apps
            equal: ['cluster']
        receivers:
          - name: 'default'
            webhook_configs:
              - url: 'http://slack-webhook.observability.svc.cluster.local'
                send_resolved: true
          - name: 'global-critical'
            webhook_configs:
              - url: 'http://pagerduty-webhook.observability.svc.cluster.local'
                send_resolved: true
          - name: 'business-alerts'
            webhook_configs:
              - url: 'http://business-webhook.observability.svc.cluster.local'
                send_resolved: true
          - name: 'infra-alerts'
            webhook_configs:
              - url: 'http://slack-infra-webhook.observability.svc.cluster.local'
                send_resolved: true
          - name: 'apps-alerts'
            webhook_configs:
              - url: 'http://slack-apps-webhook.observability.svc.cluster.local'
                send_resolved: true
      persistentVolume:
        enabled: true
        storageClass: ${OBSERVABILITY_BLOCK_SC}
        size: 20Gi
    kubeStateMetrics:
      enabled: false
    nodeExporter:
      enabled: false
    # Global VM cluster configuration
    vmcluster:
      enabled: true
      spec:
        retentionPeriod: "90d"
        replicationFactor: 2
        vmselect:
          replicaCount: 2
          extraArgs:
            cacheDataSize: "2048"
            cacheIndexSize: "512"
          resources:
            requests:
              cpu: 1000m
              memory: 2Gi
            limits:
              cpu: 2000m
              memory: 4Gi
          storage:
            volumeClaimTemplate:
              spec:
                storageClassName: ${OBSERVABILITY_BLOCK_SC}
                resources:
                  requests:
                    storage: 100Gi
        vminsert:
          replicaCount: 2
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1000m
              memory: 2Gi
        vmstorage:
          replicaCount: 3
          extraArgs:
            memory.allowedPercent: "60"
            storageDataPath: "/vmdata"
          resources:
            requests:
              cpu: 2000m
              memory: 8Gi
            limits:
              cpu: 4000m
              memory: 16Gi
          storage:
            volumeClaimTemplate:
              spec:
                storageClassName: ${OBSERVABILITY_BLOCK_SC}
                resources:
                  requests:
                    storage: 2Ti
    # Global VMagent for receiving metrics from other clusters
    vmagent:
      enabled: true
      spec:
        replicaCount: 2
        externalLabels:
          cluster: global
          role: aggregator
        scrapeInterval: 30s
        remoteWrite:
          - url: "http://victoria-metrics-global-vminsert.observability.svc.cluster.local:8480/insert/0/prometheus/api/v1/write"
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ${OBSERVABILITY_BLOCK_SC}
              resources:
                requests:
                  storage: 50Gi
    # Global VMAlert for cross-cluster alerting
    vmalert:
      enabled: true
      spec:
        replicaCount: 2
        evaluationInterval: "30s"
        ruleNamespace: "observability"
        ruleSelector: {}
        datasource:
          url: "http://victoria-metrics-global-vmselect.observability.svc.cluster.local:8481"
        notifier:
          url: "http://victoria-metrics-global-alertmanager.observability.svc.cluster.local:9093"
        extraArgs:
          rule=/etc/vmalert/rules/*.yml
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
    # Multi-tenant authentication
    vmauth:
      enabled: true
      spec:
        replicaCount: 2
        config: |
          users:
            # Infra cluster access
            - username: "infra"
              password_hash: "${INFRA_VMUSER_HASH}"
              url_prefix: "http://vminsert:8480/insert/0/prometheus"
              headers:
                - "X-Cluster: infra"
            # Apps cluster access
            - username: "apps"
              password_hash: "${APPS_VMUSER_HASH}"
              url_prefix: "http://vminsert:8480/insert/1/prometheus"
              headers:
                - "X-Cluster: apps"
            # Global read access
            - username: "global-read"
              password_hash: "${GLOBAL_READ_VMUSER_HASH}"
              url_prefix: "http://vmselect:8481/select/0/prometheus"
              headers:
                - "X-Role: readonly"
            # Business metrics access
            - username: "business"
              password_hash: "${BUSINESS_VMUSER_HASH}"
              url_prefix: "http://vminsert:8480/insert/2/prometheus"
              headers:
                - "X-Cluster: business"
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi