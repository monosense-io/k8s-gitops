---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: victoria-metrics-k8s-stack
  namespace: observability
spec:
  interval: 30m
  ref:
    tag: 0.38.3
  url: oci://ghcr.io/victoriametrics/helm-charts/victoria-metrics-k8s-stack
---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: victoria-metrics
  namespace: observability
spec:
  interval: 15m
  chartRef:
    kind: OCIRepository
    name: victoria-metrics-k8s-stack
    namespace: observability
  install:
    remediation:
      retries: 3
    crds: CreateReplace
    createNamespace: true
  upgrade:
    remediation:
      retries: 2
      strategy: rollback
    cleanupOnFail: true
  rollback:
    recreate: true
    cleanupOnFail: true
  values:
    namespaceOverride: observability
    fullnameOverride: victoriametrics
    victoria-metrics-operator:
      createCRD: true
    grafana:
      enabled: true
      admin:
        existingSecret: grafana-admin-new
        userKey: admin-user
        passwordKey: admin-password
      persistence:
        enabled: true
        storageClassName: ${OBSERVABILITY_BLOCK_SC}
        accessModes:
          - ReadWriteOnce
        size: 20Gi
      sidecar:
        dashboards:
          enabled: true
    alertmanager:
      enabled: true
      config:
        global:
          resolve_timeout: 5m
        route:
          receiver: default
        receivers:
          - name: default
      persistentVolume:
        enabled: true
        storageClass: ${OBSERVABILITY_BLOCK_SC}
        size: 20Gi
    kubeStateMetrics:
      enabled: true
    nodeExporter:
      enabled: true
    vmsingle:
      enabled: false  # Using vmcluster instead (only one can be enabled)
    vmcluster:
      enabled: true
      spec:
        retentionPeriod: ${OBSERVABILITY_METRICS_RETENTION}
        replicationFactor: 2
        vmstorage:
          replicaCount: 3
          storage:
            volumeClaimTemplate:
              spec:
                storageClassName: ${OBSERVABILITY_BLOCK_SC}
                resources:
                  requests:
                    storage: 300Gi
                accessModes:
                  - ReadWriteOnce
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 2000m
              memory: 4Gi
        vmselect:
          replicaCount: 2
          cacheMountPath: /cache
          storage:
            volumeClaimTemplate:
              spec:
                storageClassName: ${OBSERVABILITY_BLOCK_SC}
                resources:
                  requests:
                    storage: 20Gi
                accessModes:
                  - ReadWriteOnce
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 2000m
              memory: 4Gi
        vminsert:
          replicaCount: 2
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 1500m
              memory: 2Gi
    vmagent:
      enabled: true
      spec:
        replicaCount: 2
        externalLabels:
          cluster: ${CLUSTER}
        scrapeInterval: 30s
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ${OBSERVABILITY_BLOCK_SC}
              resources:
                requests:
                  storage: 20Gi
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
    vmalert:
      enabled: true
      spec:
        replicaCount: 2
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 1Gi
        extraArgs:
          notifier.blackhole: "true"
