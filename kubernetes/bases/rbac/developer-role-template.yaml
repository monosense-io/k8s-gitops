---
# Developer Role Template (per-namespace)
# Purpose: Namespace-scoped application development and deployment
# Persona: Application developers
# Validation: Security BLOCKER #1 - RBAC Model
#
# USAGE:
#   1. Copy this file to your namespace directory
#   2. Replace <NAMESPACE> with actual namespace name
#   3. Create RoleBinding for user/group
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: developer
  namespace: <NAMESPACE>
  labels:
    app.kubernetes.io/managed-by: flux
    rbac.monosense.io/persona: developer
    rbac.monosense.io/privilege-level: namespace-scoped
rules:
  # Core workload resources - full control
  - apiGroups: ["", "apps", "batch"]
    resources:
      - pods
      - pods/log
      - pods/exec
      - pods/attach
      - pods/portforward
      - deployments
      - replicasets
      - statefulsets
      - daemonsets
      - jobs
      - cronjobs
      - services
      - endpoints
      - configmaps
      - persistentvolumeclaims
    verbs: ["*"]

  # Horizontal Pod Autoscalers
  - apiGroups: ["autoscaling"]
    resources:
      - horizontalpodautoscalers
    verbs: ["*"]

  # Ingress and networking
  - apiGroups: ["networking.k8s.io"]
    resources:
      - ingresses
    verbs: ["*"]

  # Gateway API (read-only, routes created by platform)
  - apiGroups: ["gateway.networking.k8s.io"]
    resources:
      - httproutes
      - grpcroutes
      - tcproutes
      - referencegrants
    verbs: ["get", "list", "watch"]

  # External Secrets (create only, operator reconciles)
  - apiGroups: ["external-secrets.io"]
    resources:
      - externalsecrets
      - secretstores
    verbs: ["create", "get", "list", "watch", "patch"]

  # ServiceMonitors for observability
  - apiGroups: ["monitoring.coreos.com", "operator.victoriametrics.com"]
    resources:
      - servicemonitors
      - podmonitors
      - vmservicescrapes
      - vmpodscrapes
    verbs: ["create", "get", "list", "watch", "patch"]

  # CloudNativePG databases (if needed)
  - apiGroups: ["postgresql.cnpg.io"]
    resources:
      - clusters
      - backups
      - scheduledbackups
    verbs: ["get", "list", "watch"]

  # VolSync backups (read-only)
  - apiGroups: ["volsync.backube"]
    resources:
      - replicationsources
      - replicationdestinations
    verbs: ["get", "list", "watch"]

  # Events for debugging
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch"]

  # Resource quotas (read-only)
  - apiGroups: [""]
    resources:
      - resourcequotas
      - limitranges
    verbs: ["get", "list", "watch"]

  # DENY: Cannot modify RBAC
  # (No rbac.authorization.k8s.io rules = implicit deny)

  # DENY: Cannot modify NetworkPolicies
  # (Read-only access only via platform-admin)

  # DENY: Cannot access Secrets directly
  # (Must use ExternalSecrets pattern)
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: developer-binding
  namespace: <NAMESPACE>
  labels:
    app.kubernetes.io/managed-by: flux
    rbac.monosense.io/persona: developer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: developer
subjects:
  # Example: Bind to a user
  # - kind: User
  #   name: john.doe@monosense.io
  #   apiGroup: rbac.authorization.k8s.io

  # Example: Bind to a group
  # - kind: Group
  #   name: developers
  #   apiGroup: rbac.authorization.k8s.io

  # Example: Bind to a ServiceAccount (CI/CD)
  - kind: ServiceAccount
    name: cicd-deployer
    namespace: <NAMESPACE>
