---
# Security Observability Enhancement Architecture
# Design document for comprehensive security monitoring and threat detection

# yaml-language-server: $schema=https://kube-schemas.pages.dev/v1/ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: security-observability-architecture
  namespace: observability
  labels:
    app.kubernetes.io/name: security-observability
    app.kubernetes.io/component: architecture
    monosense.io/security-framework: enhanced
data:
  # ============================================================================
  # SECURITY EVENT COLLECTION AND CORRELATION
  # ============================================================================

  security-event-collection.yaml: |
    # Enhanced Security Event Collection Pipeline
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: security-event-collector
      namespace: observability
    data:
      # Fluent Bit configuration for security event collection
      fluent-bit-security.conf: |
        [SERVICE]
            Flush         5
            Daemon        off
            Log_Level     info
            Parsers_File  parsers.conf
            HTTP_Server   On
            HTTP_Listen   0.0.0.0
            HTTP_Port     2020

        # Cilium Hubble Security Events
        [INPUT]
            Name              tcp
            Host              0.0.0.0
            Port              9091
            Format            json
            Tag               cilium.security
            Chunk_Size        32KB
            Buffer_Chunk_Size 512KB
            Buffer_Max_Size   5MB

        # Kubernetes API Security Events
        [INPUT]
            Name              tail
            Path              /var/log/audit/kube-apiserver-audit.log
            Parser            json
            Tag               k8s.audit
            DB                /var/fluent-bit/state/k8s-audit.db
            Mem_Buf_Limit     100MB
            Skip_Long_Lines   On

        # Container Runtime Security Events
        [INPUT]
            Name              tail
            Path              /var/log/containers/*security*.log
            Parser            docker
            Tag               container.security
            DB                /var/fluent-bit/state/container-security.db
            Mem_Buf_Limit     50MB

        # Authentication Events
        [INPUT]
            Name              tail
            Path              /var/log/auth.log
            Parser            syslog
            Tag               auth.events
            DB                /var/fluent-bit/state/auth-events.db

        # Security Event Enrichment
        [FILTER]
            Name                modify
            Match               *
            Add                 security_event_type "network_security"
            Add                 collection_timestamp ${TIME}
            Add                 cluster_name "${CLUSTER_NAME}"
            Add                 observability_tier "security"

        # Threat Intelligence Enrichment
        [FILTER]
            Name                lua
            Match               *
            Script              /fluent-bit/scripts/threat-intel.lua
            Call                enrich_with_threat_intel

        # Correlation Engine
        [FILTER]
            Name                lua
            Match               *
            Script              /fluent-bit/scripts/correlation.lua
            Call                correlate_security_events

        # Victoria Logs Output for Security Events
        [OUTPUT]
            Name                 http
            Match                *
            Host                 victoria-logs.observability.svc.cluster.local
            Port                 9428
            URI                  /insert/jsonline?_stream_fields=security_event_type,cluster_name,severity
            Format               json_lines
            Header               AccountID 0
            Header               ProjectID 0
            Json_date_key        timestamp
            Json_date_format     iso8601
            compress             gzip
            Retry_Limit          False

  # ============================================================================
  # THREAT DETECTION AND ANALYSIS CAPABILITIES
  # ============================================================================

  threat-detection-engine.yaml: |
    # Real-time Threat Detection Engine Configuration
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: threat-detection-engine
      namespace: observability
    data:
      # Falco rules for advanced threat detection
      falco_rules.yaml: |
        # Custom Falco Rules for Enhanced Security Monitoring

        # Network Attack Detection
        - rule: Suspicious Network Activity
          desc: Detect suspicious network patterns indicating potential attacks
          condition: >
            (fd.type=ipv4 and fd.net!=0.0.0.0/0) and
            ((proc.name in (nc, ncat, netcat, socat) and
              (fd.sport in (22, 23, 80, 443, 3389, 5432, 3306) or
               fd.cport in (22, 23, 80, 443, 3389, 5432, 3306))) or
             (proc.name in (wget, curl) and
              (fd.cip.name in (malicious-domains-list) or
               fd.sip.name in (malicious-domains-list))))
          output: >
            Suspicious network activity detected
            (user=%user.name command=%proc.cmdline connection=%fd.name)
          priority: WARNING
          tags: [network, security]

        # Privilege Escalation Detection
        - rule: Privilege Escalation Attempt
          desc: Detect attempts to escalate privileges
          condition: >
            (spawned_process and
             (proc.name in (sudo, su, doas) and
              proc.args contains "root") or
             (proc.name in (chown, chmod) and
              proc.args contains "4755")) or
            (execve and
             proc.pname in (bash, zsh, sh) and
             proc.args contains "SUID")
          output: >
            Privilege escalation attempt detected
            (user=%user.name parent=%proc.pname command=%proc.cmdline)
          priority: CRITICAL
          tags: [privilege_escalation, security]

        # Container Escape Detection
        - rule: Container Escape Attempt
          desc: Detect potential container escape attempts
          condition: >
            (spawned_process and
             proc.name in (mount, nsenter, chroot, unshare) and
             proc.args contains "/proc") or
            (open_read and
             fd.name contains "/proc" and
             fd.name contains "/sys" and
             proc.name not in (kubelet, containerd, docker))
          output: >
            Container escape attempt detected
            (user=%user.name command=%proc.cmdline file=%fd.name)
          priority: CRITICAL
          tags: [container_escape, security]

        # Cryptomining Detection
        - rule: Cryptocurrency Mining Activity
          desc: Detect cryptocurrency mining activities
          condition: >
            spawned_process and
            proc.name in (xmrig, cgminer, bfgminer, cpuminer) or
            (proc.name in (wget, curl) and
             proc.args contains "mining" and
             proc.args contains "pool") or
            (network and
             fd.cip.name in (known-mining-pools) and
             proc.name not in (kubelet, containerd, docker))
          output: >
            Cryptocurrency mining activity detected
            (user=%user.name command=%proc.cmdline connection=%fd.name)
          priority: HIGH
          tags: [cryptomining, security]

        # Data Exfiltration Detection
        - rule: Potential Data Exfiltration
          desc: Detect potential data exfiltration attempts
          condition: >
            (spawned_process and
             proc.name in (tar, zip, gzip, bzip2, xz) and
             proc.args contains "/var/lib/postgresql") or
            (network and
             proc.name in (nc, scp, rsync) and
             (fd.cport in (22, 873) or
              proc.args contains "archive")) or
            (execve and
             proc.name in (kubectl) and
             proc.args contains "get" and
             proc.args contains "secrets")
          output: >
            Potential data exfiltration detected
            (user=%user.name command=%proc.cmdline target=%fd.name)
          priority: HIGH
          tags: [data_exfiltration, security]

        # API Abuse Detection
        - rule: Kubernetes API Abuse
          desc: Detect potential Kubernetes API abuse
          condition: >
            (spawned_process and
             proc.name in (kubectl, helm, kustomize) and
             (proc.args contains "delete" and
              (proc.args contains "namespace" or
               proc.args contains "deployment" or
               proc.args contains "service")) and
             proc.args not contains "monitoring") or
            (execve and
             proc.name in (curl) and
             proc.args contains "kubernetes.default.svc" and
             proc.args contains "api/v1")
          output: >
            Kubernetes API abuse detected
            (user=%user.name command=%proc.cmdline)
          priority: WARNING
          tags: [api_abuse, security]

  # ============================================================================
  # SECURITY INCIDENT RESPONSE AUTOMATION
  # ============================================================================

  incident-response-automation.yaml: |
    # Automated Security Incident Response
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: incident-response-automation
      namespace: observability
    data:
      # Automated Response Playbooks
      response-playbooks.yaml: |
        # Automated Incident Response Playbooks

        # Network Isolation Playbook
        - name: isolate-compromised-workload
          description: Isolate compromised workload from network
          triggers:
            - alert: ContainerEscapeAttempt
            - alert: PrivilegeEscalationAttempt
          actions:
            - type: network_policy
              action: deny_all_egress
              target:
                namespace: "{{ .namespace }}"
                pod: "{{ .pod }}"
            - type: annotation
              action: add
              target:
                namespace: "{{ .namespace }}"
                pod: "{{ .pod }}"
              annotations:
                security.monosense.io/isolated: "true"
                security.monosense.io/isolation-reason: "{{ .alert_name }}"
                security.monosense.io/isolation-time: "{{ .timestamp }}"
            - type: alert
              action: create
              severity: critical
              message: "Workload {{ .namespace }}/{{ .pod }} isolated due to {{ .alert_name }}"

        # Credential Rotation Playbook
        - name: rotate-compromised-credentials
          description: Rotate potentially compromised credentials
          triggers:
            - alert: DataExfiltrationAttempt
            - alert: UnauthorizedAccess
          actions:
            - type: secret_rotation
              action: rotate
              target:
                namespace: "{{ .namespace }}"
                secret_types: ["api-keys", "database-credentials"]
            - type: token_revocation
              action: revoke
              target:
                user: "{{ .user }}"
                service_account: "{{ .service_account }}"
            - type: alert
              action: create
              severity: critical
              message: "Credentials rotated for {{ .namespace }} due to security incident"

        # Evidence Collection Playbook
        - name: collect-forensic-evidence
          description: Collect forensic evidence for investigation
          triggers:
            - alert: SecurityIncident
          actions:
            - type: evidence_collection
              action: snapshot
              target:
                namespace: "{{ .namespace }}"
                pod: "{{ .pod }}"
              artifacts:
                - container_logs
                - network_connections
                - process_list
                - file_hashes
                - memory_dump
            - type: storage
              action: preserve
              target:
                namespace: "{{ .namespace }}"
                persistent_volumes: "{{ .volumes }}"
            - type: audit_log
              action: export
              time_range:
                start: "{{ .incident_time }} - 1h"
                end: "{{ .incident_time }} + 1h"
              filters:
                namespace: "{{ .namespace }}"
                user: "{{ .user }}"

  # ============================================================================
  # COMPLIANCE MONITORING AND REPORTING
  # ============================================================================

  compliance-monitoring.yaml: |
    # Automated Compliance Monitoring and Reporting
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: compliance-monitoring
      namespace: observability
    data:
      # Compliance Frameworks Configuration
      compliance-frameworks.yaml: |
        # Compliance Monitoring Frameworks

        # CIS Kubernetes Benchmark
        cis_kubernetes_benchmark:
          name: "CIS Kubernetes Benchmark v1.8"
          version: "1.8"
          description: "Center for Internet Security Kubernetes Benchmark"
          controls:
            - id: "1.1.1"
              name: "API Server Pod Security Policy"
              description: "Ensure that the --authorization-mode argument is not set to AlwaysAllow"
              check: |
                !grep -q "AlwaysAllow" /etc/kubernetes/manifests/kube-apiserver.yaml
              severity: critical
              remediation: |
                Edit the API server pod specification file and set the --authorization-mode
                parameter to values other than AlwaysAllow.

            - id: "1.1.20"
              name: "API Server Encryption Providers"
              description: "Ensure that the --encryption-provider-config argument is set"
              check: |
                grep -q "encryption-provider-config" /etc/kubernetes/manifests/kube-apiserver.yaml
              severity: critical
              remediation: |
                Follow the Kubernetes documentation and configure a EncryptionConfig file.

            - id: "2.1.1"
              name: "Anonymous Authentication Disabled"
              description: "Ensure that the --anonymous-auth argument is set to false"
              check: |
                grep -q "anonymous-auth=false" /etc/kubernetes/manifests/kube-apiserver.yaml
              severity: critical
              remediation: |
                Edit the API server pod specification file and set the --anonymous-auth
                parameter to false.

        # GDPR Compliance
        gdpr_compliance:
          name: "General Data Protection Regulation"
          description: "EU General Data Protection Regulation compliance monitoring"
          controls:
            - id: "GDPR_ARTICLE_32"
              name: "Security of Processing"
              description: "Ensure appropriate technical and organizational security measures"
              checks:
                - encryption_at_rest: true
                - encryption_in_transit: true
                - access_control: enabled
                - audit_logging: enabled
                - data_backup: configured
              severity: high

            - id: "GDPR_ARTICLE_33"
              name: "Breach Notification"
              description: "Ensure personal data breach notification procedures"
              checks:
                - incident_response: configured
                - notification_procedures: documented
                - breach_detection: automated
              severity: high

        # PCI-DSS Compliance
        pci_dss_compliance:
          name: "PCI-DSS v4.0"
          description: "Payment Card Industry Data Security Standard"
          controls:
            - id: "PCI_3.1"
              name: "Network Security Controls"
              description: "Implement network security controls"
              checks:
                - network_segmentation: enabled
                - firewall_rules: configured
                - access_control: enabled
                - monitoring: active
              severity: critical

            - id: "PCI_10.1"
              name: "Audit Trail Implementation"
              description: "Implement audit trails for all system components"
              checks:
                - audit_logging: enabled
                - log_retention: "1_year"
                - log_integrity: verified
                - access_logging: enabled
              severity: critical

  # ============================================================================
  # FORENSIC INVESTIGATION AND AUDIT TRAIL MANAGEMENT
  # ============================================================================

  forensic-capabilities.yaml: |
    # Forensic Investigation and Audit Trail Management
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: forensic-capabilities
      namespace: observability
    data:
      # Forensic Investigation Framework
      forensic-framework.yaml: |
        # Forensic Investigation and Evidence Collection Framework

        # Evidence Collection Procedures
        evidence_collection:
          timeline_analysis:
            - source: kubernetes_audit_logs
              retention: "2_years"
              integrity_check: "sha256"
            - source: cilium_network_flows
              retention: "1_year"
              integrity_check: "sha256"
            - source: container_logs
              retention: "6_months"
              integrity_check: "sha256"
            - source: system_logs
              retention: "1_year"
              integrity_check: "sha256"

          incident_reconstruction:
            steps:
              - name: "Establish Timeline"
                description: "Create detailed timeline of security incident"
                data_sources:
                  - audit_logs
                  - network_flows
                  - process_logs
                  - system_metrics
              - name: "Identify Attack Vector"
                description: "Determine how the attack was initiated"
                techniques:
                  - log_analysis
                  - network_traffic_analysis
                  - process_tree_analysis
                  - file_system_analysis
              - name: "Map Impact Assessment"
                description: "Assess the scope and impact of the incident"
                metrics:
                  - affected_systems
                  - data_exfiltration_volume
                  - privilege_escalation_level
                  - lateral_movement_paths
              - name: "Generate Evidence Package"
                description: "Package all evidence for legal review"
                components:
                  - raw_logs
                  - processed_evidence
                  - timeline_analysis
                  - impact_assessment
                  - remediation_recommendations

        # Chain of Custody Management
        chain_of_custody:
          evidence_types:
            - digital_artifacts
            - network_logs
            - system_images
            - memory_dumps
            - configuration_files

          handling_procedures:
            - collection: "Document collection method and tools used"
            - preservation: "Maintain original evidence integrity"
            - transfer: "Secure evidence transfer with verification"
            - storage: "Secure, access-controlled evidence storage"
            - disposition: "Follow legal requirements for evidence retention"

        # Automated Investigation Tools
        investigation_tools:
          network_analysis:
            - tool: "Cilium Hubble"
              capabilities: ["network_flow_analysis", "policy_enforcement", "l7_visibility"]
            - tool: "Victoria Logs"
              capabilities: ["log_aggregation", "search", "correlation"]

          forensics:
            - tool: "Falco"
              capabilities: ["runtime_security", "behavioral_analysis", "threat_detection"]
            - tool: "Custom Investigation Scripts"
              capabilities: ["automated_analysis", "evidence_collection", "report_generation"]

  # ============================================================================
  # SECURITY METRICS AND KPIs
  # ============================================================================

  security-metrics.yaml: |
    # Security Metrics and KPIs Definition
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: security-metrics
      namespace: observability
    data:
      # Security Performance Metrics
      security_kpis.yaml: |
        # Security Key Performance Indicators

        # Security Maturity Score
        security_maturity_score:
          description: "Overall security posture assessment"
          calculation: |
            (
              (network_policy_coverage * 0.25) +
              (encryption_coverage * 0.20) +
              (authentication_strength * 0.20) +
              (monitoring_coverage * 0.15) +
              (compliance_score * 0.20)
            )
          target: "> 85%"
          measurement_interval: "daily"

        # Threat Detection Effectiveness
        threat_detection_effectiveness:
          description: "Percentage of threats detected vs total threats"
          calculation: |
            (detected_threats / total_threats) * 100
          target: "> 90%"
          measurement_interval: "weekly"

        # Incident Response Time
        incident_response_time:
          description: "Average time to respond to security incidents"
          calculation: |
            avg(response_time_seconds / 3600)
          target: "< 1 hour"
          measurement_interval: "monthly"

        # Compliance Adherence
        compliance_adherence:
          description: "Percentage of compliance requirements met"
          calculation: |
            (passed_controls / total_controls) * 100
          target: "> 95%"
          measurement_interval: "monthly"

        # Security Event Volume
        security_event_volume:
          description: "Number of security events per time period"
          calculation: |
            sum(rate(security_events_total[5m]))
          baseline: "established baseline"
          measurement_interval: "continuous"

        # False Positive Rate
        false_positive_rate:
          description: "Percentage of security alerts that are false positives"
          calculation: |
            (false_positives / total_alerts) * 100
          target: "< 10%"
          measurement_interval: "monthly"

  # ============================================================================
  # INTEGRATION CONFIGURATIONS
  # ============================================================================

  integration-config.yaml: |
    # External Security Tools Integration
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: security-integrations
      namespace: observability
    data:
      # Threat Intelligence Feeds
      threat_intelligence.yaml: |
        # Threat Intelligence Integration

        feeds:
          - name: "Abuse.ch MalwareBazaar"
            url: "https://bazaar.abuse.ch/export/csv/recent/"
            format: "csv"
            update_interval: "1h"
            fields: ["hash", "threat_type", "file_name"]

          - name: "PhishTank"
            url: "https://data.phishtank.com/data/online-valid.csv"
            format: "csv"
            update_interval: "6h"
            fields: ["url", "phish_id", "submission_time"]

          - name: "AlienVault OTX"
            url: "https://otx.alienvault.com/api/v1/indicators/export"
            format: "json"
            api_key: "${OTX_API_KEY}"
            update_interval: "2h"
            fields: ["indicator", "type", "created", "description"]

        processing:
          normalization: "standardize_indicator_formats"
          deduplication: "remove_duplicate_indicators"
          enrichment: "add_contextual_information"
          scoring: "calculate_threat_scores"

      # SIEM Integration
      siem_integration.yaml: |
        # Security Information and Event Management Integration

        siem_config:
          - name: "Elastic Security"
            type: "elasticsearch"
            endpoint: "${SIEM_ENDPOINT}"
            index: "security-events"
            authentication:
              type: "api_key"
              api_key: "${SIEM_API_KEY}"
            mapping:
              timestamp: "@timestamp"
              severity: "event.severity"
              source: "source.ip"
              destination: "destination.ip"
              event_type: "event.kind"

          - name: "Splunk"
            type: "splunk_hec"
            endpoint: "${SPLUNK_HEC_ENDPOINT}"
            token: "${SPLUNK_HEC_TOKEN}"
            index: "security_events"
            sourcetype: "kubernetes:security"
            fields:
              cluster: "kubernetes.cluster.name"
              namespace: "kubernetes.namespace.name"
              pod: "kubernetes.pod.name"

      # SOAR Integration
      soar_integration.yaml: |
        # Security Orchestration, Automation and Response Integration

        soar_config:
          - name: "Cortex XSOAR"
            type: "rest_api"
            endpoint: "${SOAR_ENDPOINT}"
            api_key: "${SOAR_API_KEY}"
            playbooks:
              - "Security Incident Response"
              - "Threat Hunting"
              - "Vulnerability Management"
            incident_mapping:
              title: "alert.name"
              description: "alert.description"
              severity: "alert.severity"
              labels: "alert.labels"

      # Threat Hunting Platform
      threat_hunting.yaml: |
        # Threat Hunting Platform Integration

        hunting_platform:
          - name: "Elastic Security"
            type: "elasticsearch"
            endpoint: "${ELASTIC_ENDPOINT}"
            dashboards:
              - "Security Overview"
              - "Threat Hunting"
              - "Incident Response"
            queries:
              - "Privilege Escalation Attempts"
              - "Network Anomalies"
              - "Suspicious Process Activity"

          - name: "Grafana Security Dashboards"
            type: "grafana"
            endpoint: "${GRAFANA_ENDPOINT}"
            dashboards:
              - "Security Operations Center"
              - "Threat Intelligence"
              - "Compliance Monitoring"
            alerts:
              - "Critical Security Events"
              - "Policy Violations"
              - "Compliance Deviations"
