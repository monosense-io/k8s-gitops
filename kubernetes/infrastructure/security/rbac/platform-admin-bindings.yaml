---
# Platform Admin ClusterRoleBinding
# Purpose: Grant platform team cluster-wide read + infrastructure namespace write
# Validation: Security BLOCKER #1 - RBAC Model
#
# SECURITY NOTE: This grants significant privileges. Ensure only trusted
# platform engineering team members are added to subjects.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: platform-admin-binding
  labels:
    app.kubernetes.io/managed-by: flux
    rbac.monosense.io/persona: platform-admin
    rbac.monosense.io/privilege-level: high
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: platform-admin
subjects:
  # Example: Add platform team users
  # Uncomment and modify as needed:
  #
  # - kind: User
  #   name: platform-admin@monosense.io
  #   apiGroup: rbac.authorization.k8s.io
  #
  # - kind: Group
  #   name: platform-team
  #   apiGroup: rbac.authorization.k8s.io

  # Service accounts for operators (if needed)
  # Most operators have their own RBAC from Helm charts
---
# Infrastructure Namespaces - Full Access for Platform Admins
# Purpose: Allow platform team to manage infrastructure components
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: platform-admin-flux-system
  namespace: flux-system
  labels:
    app.kubernetes.io/managed-by: flux
    rbac.monosense.io/persona: platform-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin # Use built-in admin role for namespace-scoped full access
subjects:
  # Add same subjects as ClusterRoleBinding above
  - kind: Group
    name: platform-team
    apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: platform-admin-cert-manager
  namespace: cert-manager
  labels:
    app.kubernetes.io/managed-by: flux
    rbac.monosense.io/persona: platform-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
  - kind: Group
    name: platform-team
    apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: platform-admin-external-secrets
  namespace: external-secrets
  labels:
    app.kubernetes.io/managed-by: flux
    rbac.monosense.io/persona: platform-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
  - kind: Group
    name: platform-team
    apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: platform-admin-monitoring
  namespace: monitoring
  labels:
    app.kubernetes.io/managed-by: flux
    rbac.monosense.io/persona: platform-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
  - kind: Group
    name: platform-team
    apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: platform-admin-rook-ceph
  namespace: rook-ceph
  labels:
    app.kubernetes.io/managed-by: flux
    rbac.monosense.io/persona: platform-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
  - kind: Group
    name: platform-team
    apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: platform-admin-databases
  namespace: databases
  labels:
    app.kubernetes.io/managed-by: flux
    rbac.monosense.io/persona: platform-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
  - kind: Group
    name: platform-team
    apiGroup: rbac.authorization.k8s.io
