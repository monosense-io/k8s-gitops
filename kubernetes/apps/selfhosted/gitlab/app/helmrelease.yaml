---
# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gitlab
spec:
  interval: 30m
  chart:
    spec:
      chart: gitlab
      version: 8.6.1  # GitLab 17.6.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: gitlab
        namespace: flux-system
  install:
    remediation:
      retries: 3
    timeout: 30m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
    timeout: 30m
  valuesFrom:
    # PostgreSQL connection from CNPG component
    - kind: Secret
      name: gitlab-pguser-secret
      valuesKey: user
      targetPath: global.psql.username
      optional: false
    - kind: Secret
      name: gitlab-pguser-secret
      valuesKey: password
      targetPath: global.psql.password
      optional: false
    - kind: Secret
      name: gitlab-pguser-secret
      valuesKey: host
      targetPath: global.psql.host
      optional: false
    - kind: Secret
      name: gitlab-pguser-secret
      valuesKey: db
      targetPath: global.psql.database
      optional: false
    # GitLab secrets
    - kind: Secret
      name: gitlab-secret
      valuesKey: gitlab-root-password
      targetPath: global.initialRootPassword.secret
      optional: false
    - kind: Secret
      name: gitlab-secret
      valuesKey: gitlab-shell-secret
      targetPath: global.shell.secret
      optional: false
    - kind: Secret
      name: gitlab-secret
      valuesKey: gitlab-rails-secret
      targetPath: global.railsSecrets.secret
      optional: false
    - kind: Secret
      name: gitlab-secret
      valuesKey: gitlab-gitaly-token
      targetPath: global.gitaly.authToken.secret
      optional: false
    - kind: Secret
      name: gitlab-secret
      valuesKey: gitlab-workhorse-secret
      targetPath: global.workhorse.secret
      optional: false

  values:
    # Global GitLab configuration
    global:
      edition: ce  # Community Edition

      # Domain and URL configuration
      hosts:
        domain: monosense.dev
        https: true
        gitlab:
          name: git.monosense.dev
          https: true
        registry:
          name: registry.monosense.dev
          https: true
        ssh: git.monosense.dev

      # Ingress configuration - disabled (using Gateway API HTTPRoute)
      ingress:
        enabled: false
        configureCertmanager: false

      # Initial root password
      initialRootPassword:
        key: gitlab-root-password

      # Time zone
      time_zone: Asia/Jakarta

      # GitLab Shell (SSH) configuration
      shell:
        key: gitlab-shell-secret
        port: 22

      # Rails secrets
      railsSecrets:
        key: gitlab-rails-secret

      # GitLab Workhorse
      workhorse:
        key: gitlab-workhorse-secret

      # Gitaly (Git repository storage)
      gitaly:
        enabled: true
        authToken:
          key: gitlab-gitaly-token
        persistence:
          enabled: true
          storageClass: ceph-block
          size: 100Gi
          accessMode: ReadWriteOnce

      # External PostgreSQL configuration
      psql:
        port: 5432
        # host, username, password, database come from valuesFrom

      # External Redis configuration
      redis:
        host: gitlab-dragonfly.selfhosted.svc.cluster.local
        port: 6379
        auth:
          enabled: false  # Dragonfly in cluster doesn't require auth

      # Application configuration
      appConfig:
        # Enable seat link (for license management)
        enableSeatLink: false

        # Default projects features
        defaultProjectsFeatures:
          issues: true
          mergeRequests: true
          wiki: true
          snippets: true
          builds: true

        # LFS (Large File Storage) - using MinIO
        lfs:
          enabled: true
          proxy_download: true
          bucket: gitlab-lfs
          connection:
            secret: gitlab-minio-secret
            key: connection

        # Artifacts - using MinIO
        artifacts:
          enabled: true
          proxy_download: true
          bucket: gitlab-artifacts
          connection:
            secret: gitlab-minio-secret
            key: connection

        # Uploads - using MinIO
        uploads:
          enabled: true
          proxy_download: true
          bucket: gitlab-uploads
          connection:
            secret: gitlab-minio-secret
            key: connection

        # Packages - using MinIO
        packages:
          enabled: true
          proxy_download: true
          bucket: gitlab-packages
          connection:
            secret: gitlab-minio-secret
            key: connection

        # Backups - using MinIO
        backups:
          bucket: gitlab-backups
          tmpBucket: gitlab-tmp

        # Terraform state - using MinIO
        terraformState:
          enabled: true
          bucket: gitlab-terraform-state
          connection:
            secret: gitlab-minio-secret
            key: connection

        # Dependency Proxy
        dependencyProxy:
          enabled: true
          proxy_download: true
          bucket: gitlab-dependency-proxy
          connection:
            secret: gitlab-minio-secret
            key: connection

    # Disable cert-manager (using existing)
    certmanager:
      install: false

    # Disable nginx-ingress (using Gateway API)
    nginx-ingress:
      enabled: false

    # Disable Prometheus (using existing observability stack)
    prometheus:
      install: false

    # Disable bundled PostgreSQL (using CloudNative-PG)
    postgresql:
      install: false

    # Disable bundled Redis (using Dragonfly)
    redis:
      install: false

    # Disable bundled MinIO (using existing MinIO)
    minio:
      install: false

    # Disable GitLab Runner (can be installed separately)
    gitlab-runner:
      install: false

    # GitLab Migrations (database setup)
    migrations:
      enabled: true
      podAnnotations:
        secret.reloader.stakater.com/reload: gitlab-secret,gitlab-pguser-secret
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
        limits:
          memory: 1Gi

    # GitLab Webservice (main application)
    gitlab:
      webservice:
        enabled: true
        replicas: 2
        podAnnotations:
          secret.reloader.stakater.com/reload: gitlab-secret,gitlab-pguser-secret,gitlab-redis-secret,gitlab-minio-secret
        resources:
          requests:
            cpu: 1000m
            memory: 1536Mi
          limits:
            memory: 2Gi
        workhorse:
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              memory: 512Mi
        metrics:
          enabled: true
        maxUnavailable: 1
        minReplicas: 2
        maxReplicas: 4
        hpa:
          targetAverageValue: 1000m

      # Sidekiq (background job processor)
      sidekiq:
        enabled: true
        replicas: 1
        podAnnotations:
          secret.reloader.stakater.com/reload: gitlab-secret,gitlab-pguser-secret,gitlab-redis-secret,gitlab-minio-secret
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            memory: 1536Mi
        metrics:
          enabled: true

      # Gitaly (Git repository storage)
      gitaly:
        enabled: true
        podAnnotations:
          secret.reloader.stakater.com/reload: gitlab-secret
        persistence:
          enabled: true
          storageClass: ceph-block
          size: 100Gi
          accessMode: ReadWriteOnce
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            memory: 1536Mi
        metrics:
          enabled: true

      # GitLab Shell (SSH access)
      gitlab-shell:
        enabled: true
        podAnnotations:
          secret.reloader.stakater.com/reload: gitlab-secret
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            memory: 512Mi
        metrics:
          enabled: true
        service:
          type: LoadBalancer  # Or ClusterIP if SSH via ingress
          # annotations:
          #   metallb.universe.tf/loadBalancerIPs: <IP>

      # Praefect (Gitaly cluster) - disabled for single instance
      praefect:
        enabled: false

      # GitLab Pages - disabled initially
      gitlab-pages:
        enabled: false

      # GitLab KAS (Kubernetes Agent Server) - disabled initially
      kas:
        enabled: false

    # Container Registry - disabled initially (can be enabled later)
    registry:
      enabled: false
      # When enabling, configure:
      # storage:
      #   secret: gitlab-minio-secret
      #   key: connection
      # httpSecret:
      #   secret: gitlab-registry-secret
      #   key: registry-http-secret
      # resources:
      #   requests:
      #     cpu: 200m
      #     memory: 512Mi
      #   limits:
      #     memory: 1Gi

    # Shared Secrets - let GitLab generate them
    shared-secrets:
      enabled: true
      rbac:
        create: true
