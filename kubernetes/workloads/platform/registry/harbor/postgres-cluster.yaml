---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: harbor-db
  namespace: harbor
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: harbor
spec:
  instances: 3

  imageName: ghcr.io/cloudnative-pg/postgresql:16.6

  # High availability configuration
  primaryUpdateStrategy: unsupervised
  primaryUpdateMethod: switchover

  postgresql:
    parameters:
      # Connection settings
      max_connections: "100"
      shared_buffers: "256MB"
      effective_cache_size: "768MB"
      maintenance_work_mem: "64MB"
      checkpoint_completion_target: "0.9"
      wal_buffers: "8MB"
      default_statistics_target: "100"
      random_page_cost: "1.1"
      effective_io_concurrency: "200"
      work_mem: "2621kB"
      huge_pages: "off"
      min_wal_size: "512MB"
      max_wal_size: "2GB"

      # Locale and encoding
      lc_messages: "en_US.UTF-8"
      lc_monetary: "en_US.UTF-8"
      lc_numeric: "en_US.UTF-8"
      lc_time: "en_US.UTF-8"

      # Timezone
      timezone: "UTC"

      # Logging
      log_destination: "csvlog"
      logging_collector: "on"
      log_directory: "/var/log/postgresql"
      log_filename: "postgresql-%Y-%m-%d_%H%M%S.log"
      log_rotation_age: "1d"
      log_rotation_size: "100MB"
      log_min_duration_statement: "1000"
      log_connections: "on"
      log_disconnections: "on"
      log_line_prefix: "%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h "

      # SSL
      ssl: "on"
      ssl_min_protocol_version: "TLSv1.2"

  # Storage configuration
  storage:
    storageClass: rook-ceph-block
    size: 30Gi

  # Backup configuration
  backup:
    retentionPolicy: "30d"
    barmanObjectStore:
      destinationPath: "s3://harbor-backups/postgresql/"
      s3Credentials:
        accessKeyId:
          name: postgres-backup-credentials
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: postgres-backup-credentials
          key: SECRET_ACCESS_KEY
      wal:
        compression: gzip
        encryption: AES256
      data:
        compression: gzip
        encryption: AES256

  # Monitoring
  monitoring:
    enablePodMonitor: true

  # Resources
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"

  # Affinity for HA
  affinity:
    enablePodAntiAffinity: true
    topologyKey: kubernetes.io/hostname
    podAntiAffinityType: preferred

  # Bootstrap configuration
  bootstrap:
    initdb:
      database: registry
      owner: harbor
      encoding: UTF8
      localeCollate: en_US.UTF-8
      localeCType: en_US.UTF-8
      postInitSQL:
        - CREATE DATABASE notary_server
        - CREATE DATABASE notary_signer
        - GRANT ALL PRIVILEGES ON DATABASE notary_server TO harbor
        - GRANT ALL PRIVILEGES ON DATABASE notary_signer TO harbor
