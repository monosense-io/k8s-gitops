---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: harbor
  namespace: harbor
spec:
  interval: 30m
  chart:
    spec:
      chart: harbor
      version: 1.16.0
      sourceRef:
        kind: HelmRepository
        name: harbor
        namespace: flux-system
      interval: 12h
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  valuesFrom:
    - kind: Secret
      name: harbor-core
      valuesKey: HARBOR_ADMIN_PASSWORD
      targetPath: harborAdminPassword
    - kind: Secret
      name: harbor-core
      valuesKey: secret
      targetPath: core.secret
    - kind: Secret
      name: harbor-registry
      valuesKey: REGISTRY_HTTP_SECRET
      targetPath: registry.secret
    - kind: Secret
      name: harbor-database
      valuesKey: password
      targetPath: database.internal.password

  values:
    # Expose Harbor via ClusterIP (use Envoy Gateway for ingress)
    expose:
      type: clusterIP
      tls:
        enabled: false  # TLS termination at gateway
      clusterIP:
        name: harbor
        ports:
          httpPort: 80

    # External URL (configure based on your domain)
    externalURL: https://harbor.monosense.io

    # Persistence
    persistence:
      enabled: true
      resourcePolicy: "keep"
      persistentVolumeClaim:
        registry:
          storageClass: rook-ceph-block
          size: 200Gi
          accessMode: ReadWriteOnce
        jobservice:
          jobLog:
            storageClass: rook-ceph-block
            size: 10Gi
            accessMode: ReadWriteOnce
        trivy:
          storageClass: rook-ceph-block
          size: 10Gi
          accessMode: ReadWriteOnce

    # Use external PostgreSQL (Shared CloudNative-PG Cluster) - UPDATED
    database:
      type: external
      external:
        # CHANGED: Now using shared pooler instead of separate cluster
        host: harbor-pooler-rw.cnpg-system.svc.cluster.local
        port: "5432"
        username: harbor_app    # CHANGED: Match shared cluster user
        coreDatabase: registry
        notaryServerDatabase: notary_server
        notarySignerDatabase: notary_signer
        sslmode: require      # Harbor requires SSL
      # Password provided via valuesFrom above

    # Use external Redis (DragonflyDB)
    redis:
      type: external
      external:
        addr: dragonfly.dragonfly.svc.cluster.local:6379
        # Separate databases for different components
        coreDatabaseIndex: "1"
        jobserviceDatabaseIndex: "2"
        registryDatabaseIndex: "3"
        trivyAdapterIndex: "4"

    # Portal (web UI)
    portal:
      replicas: 2
      resources:
        requests:
          memory: 256Mi
          cpu: 100m
        limits:
          memory: 512Mi
          cpu: 500m

    # Core service
    core:
      replicas: 2
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 1Gi
          cpu: 1000m
      # Secret provided via valuesFrom

    # Job service
    jobservice:
      replicas: 2
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 1Gi
          cpu: 1000m

    # Registry
    registry:
      replicas: 2
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 1Gi
          cpu: 1000m
      # Secret provided via valuesFrom

    # Trivy scanner
    trivy:
      enabled: true
      replicas: 1
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
        limits:
          cpu: 1000m
          memory: 1Gi

    # Notary (content trust)
    notary:
      enabled: true
      server:
        replicas: 1
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
          limits:
            memory: 512Mi
            cpu: 500m
      signer:
        replicas: 1
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
          limits:
            memory: 512Mi
            cpu: 500m

    # Metrics
    metrics:
      enabled: true
      core:
        path: /metrics
        port: 8001
      registry:
        path: /metrics
        port: 8001
      jobservice:
        path: /metrics
        port: 8001
      exporter:
        path: /metrics
        port: 8001

    # Cache settings
    cache:
      enabled: true
      expireHours: 24

    # Security context
    containerSecurityContext:
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL

    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 10000
      fsGroup: 10000
      seccompProfile:
        type: RuntimeDefault
