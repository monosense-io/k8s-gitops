---
# yaml-language-server: $schema=https://strimzi.io/install/latest/kafka.strimzi.io-v1beta2-kafka.json
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: synergyflow
  namespace: messaging
  labels:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/component: messaging
    app.kubernetes.io/part-of: synergyflow
spec:
  # Kafka configuration
  kafka:
    version: 3.8.1
    replicas: 3

    # Listeners configuration
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
        authentication:
          type: scram-sha-512
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: scram-sha-512

    # Kafka broker configuration
    config:
      # Replication and durability
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2

      # Topic management
      auto.create.topics.enable: false  # Enforce schema-first approach
      delete.topic.enable: true

      # Log retention
      log.retention.hours: 168  # 7 days
      log.retention.bytes: 107374182400  # 100GB per partition
      log.segment.bytes: 1073741824  # 1GB segments

      # Compression
      compression.type: snappy

      # Performance tuning
      num.network.threads: 8
      num.io.threads: 16
      socket.send.buffer.bytes: 102400
      socket.receive.buffer.bytes: 102400
      socket.request.max.bytes: 104857600

      # Group coordinator
      group.initial.rebalance.delay.ms: 3000

    # Storage configuration
    storage:
      type: jbod
      volumes:
        - id: 0
          type: persistent-claim
          size: 100Gi
          deleteClaim: false
          class: rook-ceph-block

    # Resource requests and limits
    resources:
      requests:
        memory: 4Gi
        cpu: "2"
      limits:
        memory: 4Gi
        cpu: "2"

    # JVM options
    jvmOptions:
      -Xms: "3072m"
      -Xmx: "3072m"
      gcLoggingEnabled: false

    # Metrics configuration for Victoria Metrics
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yml

    # Rack awareness for HA
    rack:
      topologyKey: topology.kubernetes.io/zone

  # Entity Operator for Topic and User management
  entityOperator:
    topicOperator:
      resources:
        requests:
          memory: 256Mi
          cpu: 100m
        limits:
          memory: 512Mi
          cpu: 500m
    userOperator:
      resources:
        requests:
          memory: 256Mi
          cpu: 100m
        limits:
          memory: 512Mi
          cpu: 500m

  # Kafka Exporter for additional metrics
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 256Mi

  # Cruise Control for auto-scaling and rebalancing
  cruiseControl:
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1
        memory: 2Gi
    config:
      # Capacity configuration
      default.goals: >
        com.linkedin.kafka.cruisecontrol.analyzer.goals.RackAwareGoal,
        com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaCapacityGoal,
        com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskCapacityGoal,
        com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkInboundCapacityGoal,
        com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkOutboundCapacityGoal,
        com.linkedin.kafka.cruisecontrol.analyzer.goals.CpuCapacityGoal,
        com.linkedin.kafka.cruisecontrol.analyzer.goals.ReplicaDistributionGoal,
        com.linkedin.kafka.cruisecontrol.analyzer.goals.PotentialNwOutGoal,
        com.linkedin.kafka.cruisecontrol.analyzer.goals.DiskUsageDistributionGoal,
        com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkInboundUsageDistributionGoal,
        com.linkedin.kafka.cruisecontrol.analyzer.goals.NetworkOutboundUsageDistributionGoal,
        com.linkedin.kafka.cruisecontrol.analyzer.goals.CpuUsageDistributionGoal,
        com.linkedin.kafka.cruisecontrol.analyzer.goals.LeaderReplicaDistributionGoal,
        com.linkedin.kafka.cruisecontrol.analyzer.goals.LeaderBytesInDistributionGoal,
        com.linkedin.kafka.cruisecontrol.analyzer.goals.TopicReplicaDistributionGoal
      cpu.balance.threshold: "1.1"
      disk.balance.threshold: "1.1"
      network.inbound.balance.threshold: "1.1"
      network.outbound.balance.threshold: "1.1"
