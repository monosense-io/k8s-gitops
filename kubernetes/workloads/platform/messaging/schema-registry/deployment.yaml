---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/apps/v1/deployment.json
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry
  namespace: messaging
  labels:
    app.kubernetes.io/name: schema-registry
    app.kubernetes.io/component: messaging
    app.kubernetes.io/part-of: synergyflow
    app.kubernetes.io/version: "7.8.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  selector:
    matchLabels:
      app.kubernetes.io/name: schema-registry
      app.kubernetes.io/component: messaging

  template:
    metadata:
      labels:
        app.kubernetes.io/name: schema-registry
        app.kubernetes.io/component: messaging
        app.kubernetes.io/part-of: synergyflow
        app.kubernetes.io/version: "7.8.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/metrics"

    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault

      containers:
        - name: schema-registry
          image: confluentinc/cp-schema-registry:7.8.0
          imagePullPolicy: IfNotPresent

          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 8081
              protocol: TCP

          env:
            # Schema Registry configuration
            - name: SCHEMA_REGISTRY_HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP

            - name: SCHEMA_REGISTRY_LISTENERS
              value: "http://0.0.0.0:8081"

            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              value: "synergyflow-kafka-bootstrap.messaging.svc.cluster.local:9092"

            - name: SCHEMA_REGISTRY_KAFKASTORE_TOPIC
              value: "_schemas"

            - name: SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR
              value: "3"

            # Authentication with Kafka
            - name: SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL
              value: "SASL_PLAINTEXT"

            - name: SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM
              value: "SCRAM-SHA-512"

            - name: SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG
              valueFrom:
                secretKeyRef:
                  name: schema-registry-kafka-credentials
                  key: sasl.jaas.config

            # Schema compatibility
            - name: SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL
              value: "BACKWARD"

            # Leader eligibility
            - name: SCHEMA_REGISTRY_LEADER_ELIGIBILITY
              value: "true"

            # Metrics and monitoring
            - name: SCHEMA_REGISTRY_JMX_OPTS
              value: >-
                -Dcom.sun.management.jmxremote=true
                -Dcom.sun.management.jmxremote.authenticate=false
                -Dcom.sun.management.jmxremote.ssl=false
                -Dcom.sun.management.jmxremote.local.only=false
                -Dcom.sun.management.jmxremote.port=5555
                -Dcom.sun.management.jmxremote.rmi.port=5555
                -Djava.rmi.server.hostname=127.0.0.1

            # Performance tuning
            - name: SCHEMA_REGISTRY_HEAP_OPTS
              value: "-Xms512M -Xmx512M"

            # Logging
            - name: SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL
              value: "INFO"

          resources:
            requests:
              memory: 768Mi
              cpu: 250m
            limits:
              memory: 1Gi
              cpu: 1000m

          livenessProbe:
            httpGet:
              path: /subjects
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /subjects
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: schema-registry
                topologyKey: kubernetes.io/hostname

      terminationGracePeriodSeconds: 30
