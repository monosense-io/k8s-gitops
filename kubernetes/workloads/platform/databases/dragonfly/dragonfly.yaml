---
apiVersion: dragonflydb.io/v1alpha1
kind: Dragonfly
metadata:
  name: dragonfly
  namespace: dragonfly-system
  labels:
    app.kubernetes.io/name: dragonfly
    app.kubernetes.io/component: database
spec:
  # Image version (ghcr.io registry)
  image: ghcr.io/dragonflydb/dragonfly:${DRAGONFLY_IMAGE_TAG}

  # High availability: 3 pods (1 primary + 2 replicas)
  replicas: ${DRAGONFLY_REPLICAS}

  # Resource limits
  resources:
    requests:
      cpu: ${DRAGONFLY_CPU_REQUEST}
      memory: ${DRAGONFLY_MEMORY_REQUEST}
    limits:
      cpu: ${DRAGONFLY_CPU_LIMIT}
      memory: ${DRAGONFLY_MEMORY_LIMIT}

  # Persistence
  snapshot:
    dir: /data
    cron: "0 */6 * * *"  # Snapshot every 6 hours

  # Storage
  storage:
    storageClassName: ${DRAGONFLY_STORAGE_CLASS}
    requests:
      storage: ${DRAGONFLY_DATA_SIZE}

  # Authentication
  authentication:
    passwordFromSecret:
      name: dragonfly-auth
      key: password

  # Metrics
  metrics:
    enabled: true
    port: 6379

  # Args for Dragonfly process
  args:
    - --dir=/data
    - --logtostderr
    - --requirepass=$(DRAGONFLY_PASSWORD)
    - --primary_port_http_enabled=true
    - --admin_port=6380
    - --metrics_port=6379
    - --proactor_threads=2
    - --cluster_mode=emulated
    - --default_lua_flags=allow-undeclared-keys
    - --save_schedule=*:*

  # Environment variables
  env:
    - name: DRAGONFLY_PASSWORD
      valueFrom:
        secretKeyRef:
          name: dragonfly-auth
          key: password

  # Topology spread for high availability
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          app: dragonfly
          dragonflydb.io/instance: dragonfly

  # Security context (PSA restricted compliant)
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 10001
    fsGroup: 10001
    seccompProfile:
      type: RuntimeDefault

  containerSecurityContext:
    runAsNonRoot: true
    runAsUser: 10001
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL

  # Liveness probe
  livenessProbe:
    httpGet:
      path: /healthz
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

  # Readiness probe
  readinessProbe:
    httpGet:
      path: /healthz
      port: 8080
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

  # Service configuration
  serviceSpec:
    type: ClusterIP
