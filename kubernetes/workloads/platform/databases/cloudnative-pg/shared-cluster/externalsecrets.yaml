---
# Superuser Secret
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: cnpg-superuser
  namespace: cnpg-system
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: ${EXTERNAL_SECRET_STORE}
  target:
    name: cnpg-superuser
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        username: "{{ .username }}"
        password: "{{ .password }}"
  dataFrom:
    - extract:
        key: ${CNPG_SUPERUSER_SECRET_PATH}
---
# MinIO Backup Credentials
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: cnpg-minio-credentials
  namespace: cnpg-system
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: ${EXTERNAL_SECRET_STORE}
  target:
    name: cnpg-minio-credentials
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        access-key: "{{ .accessKey }}"
        secret-key: "{{ .secretKey }}"
  dataFrom:
    - extract:
        key: ${CNPG_MINIO_SECRET_PATH}
---
# GitLab Database Credentials
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: gitlab-db-credentials
  namespace: cnpg-system
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: ${EXTERNAL_SECRET_STORE}
  target:
    name: gitlab-db-credentials
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        password: "{{ .password }}"
  data:
    - secretKey: password
      remoteRef:
        key: kubernetes/infra/cloudnative-pg/gitlab
        property: password
---
# Harbor Database Credentials
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: harbor-db-credentials
  namespace: cnpg-system
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: ${EXTERNAL_SECRET_STORE}
  target:
    name: harbor-db-credentials
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        password: "{{ .password }}"
  data:
    - secretKey: password
      remoteRef:
        key: kubernetes/infra/cloudnative-pg/harbor
        property: password
---
# Keycloak Database Credentials
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: keycloak-db-credentials
  namespace: cnpg-system
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: ${EXTERNAL_SECRET_STORE}
  target:
    name: keycloak-db-credentials
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        password: "{{ .password }}"
  data:
    - secretKey: password
      remoteRef:
        key: kubernetes/infra/cloudnative-pg/keycloak
        property: password
---
# Read-Only User Credentials
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: postgres-readonly-credentials
  namespace: cnpg-system
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: ${EXTERNAL_SECRET_STORE}
  target:
    name: postgres-readonly-credentials
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        password: "{{ .password }}"
  data:
    - secretKey: password
      remoteRef:
        key: kubernetes/infra/cloudnative-pg/readonly
        property: password
---
# SynergyFlow Database Credentials
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: synergyflow-db-credentials
  namespace: cnpg-system
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: ${EXTERNAL_SECRET_STORE}
  target:
    name: synergyflow-db-credentials
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        password: "{{ .password }}"
  data:
    - secretKey: password
      remoteRef:
        key: kubernetes/infra/cloudnative-pg/synergyflow
        property: password
