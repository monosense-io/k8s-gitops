---
# Superuser credentials (break-glass only)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cnpg-superuser
  namespace: cnpg-system
  labels:
    app.kubernetes.io/name: cloudnative-pg
    app.kubernetes.io/component: cluster
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: ${EXTERNAL_SECRET_STORE}

  target:
    name: cnpg-superuser
    creationPolicy: Owner

  refreshInterval: 1h

  data:
    - secretKey: username
      remoteRef:
        key: ${CNPG_SUPERUSER_SECRET_PATH}
        property: username

    - secretKey: password
      remoteRef:
        key: ${CNPG_SUPERUSER_SECRET_PATH}
        property: password

---
# MinIO/S3 credentials for backups
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cnpg-minio-credentials
  namespace: cnpg-system
  labels:
    app.kubernetes.io/name: cloudnative-pg
    app.kubernetes.io/component: cluster
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: ${EXTERNAL_SECRET_STORE}

  target:
    name: cnpg-minio-credentials
    creationPolicy: Owner

  refreshInterval: 1h

  data:
    - secretKey: ACCESS_KEY_ID
      remoteRef:
        key: ${CNPG_MINIO_SECRET_PATH}
        property: ACCESS_KEY_ID

    - secretKey: SECRET_ACCESS_KEY
      remoteRef:
        key: ${CNPG_MINIO_SECRET_PATH}
        property: SECRET_ACCESS_KEY

---
# Harbor database credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: harbor-db-credentials
  namespace: cnpg-system
  labels:
    app.kubernetes.io/name: cloudnative-pg
    app.kubernetes.io/component: database
    app: harbor
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: ${EXTERNAL_SECRET_STORE}

  target:
    name: harbor-db-credentials
    creationPolicy: Owner

  refreshInterval: 1h

  data:
    - secretKey: username
      remoteRef:
        key: ${CNPG_HARBOR_SECRET_PATH}
        property: username

    - secretKey: password
      remoteRef:
        key: ${CNPG_HARBOR_SECRET_PATH}
        property: password

---
# Keycloak database credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: keycloak-db-credentials
  namespace: cnpg-system
  labels:
    app.kubernetes.io/name: cloudnative-pg
    app.kubernetes.io/component: database
    app: keycloak
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: ${EXTERNAL_SECRET_STORE}

  target:
    name: keycloak-db-credentials
    creationPolicy: Owner

  refreshInterval: 1h

  data:
    - secretKey: username
      remoteRef:
        key: ${CNPG_KEYCLOAK_SECRET_PATH}
        property: username

    - secretKey: password
      remoteRef:
        key: ${CNPG_KEYCLOAK_SECRET_PATH}
        property: password

---
# GitLab database credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-db-credentials
  namespace: cnpg-system
  labels:
    app.kubernetes.io/name: cloudnative-pg
    app.kubernetes.io/component: database
    app: gitlab
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: ${EXTERNAL_SECRET_STORE}

  target:
    name: gitlab-db-credentials
    creationPolicy: Owner

  refreshInterval: 1h

  data:
    - secretKey: username
      remoteRef:
        key: ${CNPG_GITLAB_SECRET_PATH}
        property: username

    - secretKey: password
      remoteRef:
        key: ${CNPG_GITLAB_SECRET_PATH}
        property: password

---
# SynergyFlow database credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: synergyflow-db-credentials
  namespace: cnpg-system
  labels:
    app.kubernetes.io/name: cloudnative-pg
    app.kubernetes.io/component: database
    app: synergyflow
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: ${EXTERNAL_SECRET_STORE}

  target:
    name: synergyflow-db-credentials
    creationPolicy: Owner

  refreshInterval: 1h

  data:
    - secretKey: username
      remoteRef:
        key: ${CNPG_SYNERGYFLOW_SECRET_PATH}
        property: username

    - secretKey: password
      remoteRef:
        key: ${CNPG_SYNERGYFLOW_SECRET_PATH}
        property: password
