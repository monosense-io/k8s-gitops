---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-gitops-runner
---
# ClusterRole: GitOps-focused permissions (not cluster-admin)
# This provides scoped access for managing Flux resources and reading cluster state
#
# SECURITY NOTE: This is MORE RESTRICTIVE than buroa's implementation (cluster-admin)
# If you need cluster-admin access, replace the entire ClusterRole definition below with:
#
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: cluster-admin
#
# in the ClusterRoleBinding at the bottom of this file.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-gitops-runner
rules:
  # Flux CD resources - full access for GitOps operations
  - apiGroups: ["kustomize.toolkit.fluxcd.io"]
    resources: ["kustomizations"]
    verbs: ["*"]
  - apiGroups: ["helm.toolkit.fluxcd.io"]
    resources: ["helmreleases"]
    verbs: ["*"]
  - apiGroups: ["source.toolkit.fluxcd.io"]
    resources: ["gitrepositories", "ocirepositories", "helmrepositories", "helmcharts", "buckets"]
    verbs: ["*"]
  - apiGroups: ["notification.toolkit.fluxcd.io"]
    resources: ["alerts", "providers", "receivers"]
    verbs: ["*"]

  # Core resources - read-only for validation
  - apiGroups: [""]
    resources: ["pods", "services", "configmaps", "secrets", "namespaces", "persistentvolumeclaims", "nodes", "events"]
    verbs: ["get", "list", "watch"]

  # Applications - limited write access (patch only, no create/delete)
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets", "daemonsets", "replicasets"]
    verbs: ["get", "list", "watch", "patch"]

  # Batch jobs
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "list", "watch"]

  # Networking
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses", "networkpolicies", "ingressclasses"]
    verbs: ["get", "list", "watch"]

  # Gateway API (Cilium)
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["gateways", "httproutes", "grpcroutes", "referencegrants", "gatewayclasses"]
    verbs: ["get", "list", "watch"]

  # Cilium resources
  - apiGroups: ["cilium.io"]
    resources: ["ciliumnetworkpolicies", "ciliumclusterwidenetworkpolicies", "ciliumendpoints", "ciliumnodes"]
    verbs: ["get", "list", "watch"]

  # External Secrets
  - apiGroups: ["external-secrets.io"]
    resources: ["externalsecrets", "secretstores", "clustersecretstores"]
    verbs: ["get", "list", "watch"]

  # Cert Manager
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
    verbs: ["get", "list", "watch"]

  # Custom Resource Definitions - read only
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch"]

  # Storage
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses", "volumeattachments", "csinodes", "csidrivers"]
    verbs: ["get", "list", "watch"]

  # RBAC - read only for auditing
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
    verbs: ["get", "list", "watch"]

  # Monitoring (Prometheus/VictoriaMetrics)
  - apiGroups: ["monitoring.coreos.com"]
    resources: ["servicemonitors", "podmonitors", "prometheusrules"]
    verbs: ["get", "list", "watch"]

  # Policy
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets", "podsecuritypolicies"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-gitops-runner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-gitops-runner
  # To use cluster-admin instead (like buroa), uncomment below and comment above:
  # name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: k8s-gitops-runner
    namespace: actions-runner-system
