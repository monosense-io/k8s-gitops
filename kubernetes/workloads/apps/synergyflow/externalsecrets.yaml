---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: synergyflow-db-credentials
  namespace: synergyflow
  labels:
    app.kubernetes.io/name: synergyflow
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: synergyflow
spec:
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore

  target:
    name: synergyflow-db-credentials
    creationPolicy: Owner

  data:
    - secretKey: DB_USERNAME
      remoteRef:
        key: postgresql/synergyflow
        property: username

    - secretKey: DB_PASSWORD
      remoteRef:
        key: postgresql/synergyflow
        property: password

  refreshInterval: 1h

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: synergyflow-kafka-credentials
  namespace: synergyflow
  labels:
    app.kubernetes.io/name: synergyflow
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: synergyflow
spec:
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore

  target:
    name: synergyflow-kafka-credentials
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        KAFKA_SASL_JAAS_CONFIG: |
          org.apache.kafka.common.security.scram.ScramLoginModule required \
            username="{{ .username }}" \
            password="{{ .password }}";

  data:
    - secretKey: username
      remoteRef:
        key: kafka/users/synergyflow-backend
        property: username

    - secretKey: password
      remoteRef:
        key: kafka/users/synergyflow-backend
        property: password

  refreshInterval: 1h

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: synergyflow-redis-credentials
  namespace: synergyflow
  labels:
    app.kubernetes.io/name: synergyflow
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: synergyflow
spec:
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore

  target:
    name: synergyflow-redis-credentials
    creationPolicy: Owner

  data:
    - secretKey: REDIS_PASSWORD
      remoteRef:
        key: redis/dragonfly
        property: password

  refreshInterval: 1h

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: harbor-registry-secret
  namespace: synergyflow
  labels:
    app.kubernetes.io/name: synergyflow
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: synergyflow
spec:
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore

  target:
    name: harbor-registry-secret
    creationPolicy: Owner
    template:
      type: kubernetes.io/dockerconfigjson
      engineVersion: v2
      data:
        .dockerconfigjson: |
          {
            "auths": {
              "harbor.monosense.io": {
                "username": "{{ .username }}",
                "password": "{{ .password }}",
                "auth": "{{ printf "%s:%s" .username .password | b64enc }}"
              }
            }
          }

  data:
    - secretKey: username
      remoteRef:
        key: harbor/robot-accounts/synergyflow
        property: username

    - secretKey: password
      remoteRef:
        key: harbor/robot-accounts/synergyflow
        property: password

  refreshInterval: 1h

# Note: postgres-backup-credentials removed - backups are managed by shared cluster
