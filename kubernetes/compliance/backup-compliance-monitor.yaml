---
# Backup Compliance Monitoring Framework
# Purpose: Automated compliance checking and validation
apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-compliance-monitor
  namespace: monitoring
  labels:
    app.kubernetes.io/name: backup-compliance
    app.kubernetes.io/component: monitoring
data:
  # Compliance Rule Definitions
  compliance-rules.yaml: |
    rules:
      backup_frequency:
        high_compliance:
          expected_interval: "4h"
          max_delay: "30m"
          severity: "critical"
        medium_compliance:
          expected_interval: "24h"
          max_delay: "2h"
          severity: "warning"

      retention_compliance:
        gdpr_personal_data:
          min_retention: "2y"
          max_retention: "7y"
          severity: "critical"
        sox_financial:
          min_retention: "7y"
          max_retention: "7y"
          severity: "critical"
        hipaa_health:
          min_retention: "7y"
          max_retention: "10y"
          severity: "critical"

      encryption_compliance:
        in_transit:
          required_version: "TLSv1.3"
          cipher_strength: ">=256"
          severity: "critical"
        at_rest:
          required_algorithm: "AES-256-GCM"
          key_rotation: "30d"
          severity: "critical"

      access_control:
        privileged_access:
          mfa_required: true
          session_timeout: "15m"
          approval_required: true
          severity: "critical"

      audit_trail:
        log_completeness: "100%"
        log_integrity: "cryptographic_hash"
        retention_period: "7y"
        severity: "critical"

  # Prometheus Alerting Rules
  compliance-alerts.yaml: |
    groups:
      - name: backup_compliance
        rules:
          # Backup Frequency Alerts
          - alert: BackupFrequencyComplianceViolation
            expr: time() - backup_last_success_timestamp > backup_compliance_max_delay_seconds
            for: 0m
            labels:
              severity: critical
              compliance_framework: "backup_frequency"
            annotations:
              summary: "Backup frequency compliance violation"
              description: "Backup for {{ $labels.backup_name }} is {{ $value | humanizeDuration }} overdue"
              compliance_impact: "Regulatory non-compliance risk"
              required_action: "Immediate investigation and remediation"

          # Retention Policy Alerts
          - alert: BackupRetentionComplianceViolation
            expr: backup_retention_days < backup_compliance_min_retention_days
            for: 0m
            labels:
              severity: critical
              compliance_framework: "retention"
            annotations:
              summary: "Backup retention compliance violation"
              description: "Backup retention of {{ $value }} days is below required {{ $labels.min_retention_days }} days"
              compliance_impact: "Data loss and regulatory violation risk"
              required_action: "Adjust retention policy immediately"

          # Encryption Compliance Alerts
          - alert: BackupEncryptionComplianceViolation
            expr: backup_encryption_enabled != 1
            for: 0m
            labels:
              severity: critical
              compliance_framework: "encryption"
            annotations:
              summary: "Backup encryption compliance violation"
              description: "Backup {{ $labels.backup_name }} is not encrypted"
              compliance_impact: "Data breach and regulatory violation risk"
              required_action: "Enable encryption immediately"

          # Access Control Alerts
          - alert: BackupAccessControlViolation
            expr: increase(backup_unauthorized_access_count[5m]) > 0
            for: 0m
            labels:
              severity: critical
              compliance_framework: "access_control"
            annotations:
              summary: "Unauthorized backup access detected"
              description: "{{ $value }} unauthorized access attempts detected"
              compliance_impact: "Security breach and data loss risk"
              required_action: "Immediate security response"

  # Compliance Dashboard Configuration
  compliance-dashboard.json: |
    {
      "dashboard": {
        "title": "Backup Compliance Dashboard",
        "panels": [
          {
            "title": "Overall Compliance Score",
            "type": "stat",
            "targets": [
              {
                "expr": "backup_compliance_score * 100",
                "legendFormat": "Compliance Score %"
              }
            ]
          },
          {
            "title": "Backup Status by Compliance Level",
            "type": "table",
            "targets": [
              {
                "expr": "backup_compliance_status",
                "format": "table"
              }
            ]
          },
          {
            "title": "Retention Policy Compliance",
            "type": "heatmap",
            "targets": [
              {
                "expr": "backup_retention_compliance_matrix",
                "legendFormat": "{{ compliance_type }}"
              }
            ]
          },
          {
            "title": "Audit Trail Integrity",
            "type": "singlestat",
            "targets": [
              {
                "expr": "audit_trail_integrity_score",
                "legendFormat": "Audit Integrity Score"
              }
            ]
          }
        ]
      }
    }

---
# Compliance Monitoring Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backup-compliance-monitor
  namespace: monitoring
  labels:
    app.kubernetes.io/name: backup-compliance
    app.kubernetes.io/component: monitor
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: backup-compliance
      app.kubernetes.io/component: monitor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: backup-compliance
        app.kubernetes.io/component: monitor
    spec:
      serviceAccountName: backup-compliance-monitor
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        fsGroup: 65532
      containers:
        - name: compliance-monitor
          image: ghcr.io/monosense/backup-compliance-monitor:latest
          imagePullPolicy: IfNotPresent
          args:
            - "--config=/etc/compliance/rules.yaml"
            - "--prometheus-url=http://victoria-metrics.monitoring.svc.cluster.local:8428"
            - "--alertmanager-url=http://victoria-metrics-alert.monitoring.svc.cluster.local:9093"
            - "--evaluation-interval=5m"
          volumeMounts:
            - name: compliance-rules
              mountPath: /etc/compliance
              readOnly: true
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      volumes:
        - name: compliance-rules
          configMap:
            name: backup-compliance-monitor

---
# Service Account for Compliance Monitoring
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backup-compliance-monitor
  namespace: monitoring
  labels:
    app.kubernetes.io/name: backup-compliance
    app.kubernetes.io/component: monitor

---
# RBAC for Compliance Monitoring
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backup-compliance-monitor
  labels:
    app.kubernetes.io/name: backup-compliance
    app.kubernetes.io/component: monitor
rules:
  # Read access to backup resources
  - apiGroups: ["velero.io"]
    resources: ["backups", "restores", "schedules", "backupstoragelocations"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["postgresql.cnpg.io"]
    resources: ["backups", "clusters", "scheduledbackups"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["rook.io"]
    resources: ["cephclusters", "cephblockpools"]
    verbs: ["get", "list", "watch"]
  # Read access to secrets for backup verification
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
    resourceNames: ["backup-encryption-keys", "backup-credentials"]
  # Read access to configmaps
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: backup-compliance-monitor
  labels:
    app.kubernetes.io/name: backup-compliance
    app.kubernetes.io/component: monitor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: backup-compliance-monitor
subjects:
  - kind: ServiceAccount
    name: backup-compliance-monitor
    namespace: monitoring