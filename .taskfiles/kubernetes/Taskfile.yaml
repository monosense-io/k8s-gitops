---
version: '3'

vars:
  DEFAULT_CLUSTERS: infra,apps

tasks:
  bootstrap:
    desc: Bootstrap Flux controllers and sync manifests to a cluster [CLUSTER=required]
    cmds:
      - flux install --context={{.CONTEXT}} --namespace flux-system
      - kubectl --context={{.CONTEXT}} apply -k {{.KUBERNETES_DIR}}/clusters/{{.CLUSTER}}/flux-system
    vars:
      CLUSTER: '{{.CLUSTER | default ""}}'
      CONTEXT: '{{.CONTEXT | default .CLUSTER}}'
    requires:
      vars: [CLUSTER]
    preconditions:
      - kubectl config get-contexts {{.CONTEXT}}
      - test -d {{.KUBERNETES_DIR}}/clusters/{{.CLUSTER}}/flux-system
      - which kubectl flux

  reconcile:
    desc: Trigger a Flux reconcile against a cluster root [CLUSTER=required]
    cmds:
      - flux reconcile kustomization cluster-config --context={{.CONTEXT}} --namespace flux-system --with-source
    vars:
      CLUSTER: '{{.CLUSTER | default ""}}'
      CONTEXT: '{{.CONTEXT | default .CLUSTER}}'
    requires:
      vars: [CLUSTER]
    preconditions:
      - kubectl config get-contexts {{.CONTEXT}}
      - which flux

  reconcile-all:
    desc: Trigger reconcile against all clusters
    cmds:
      - for cluster in $(echo {{.DEFAULT_CLUSTERS}} | tr ',' ' '); do \
          task kubernetes:reconcile CLUSTER=$cluster; \
        done
    silent: true

  reconcile-mesh:
    desc: Reconcile Cilium mesh components (clustermesh secret, BGP policy, GatewayClass) [CLUSTER=required]
    cmds:
      - flux -n flux-system --context={{.CONTEXT}} reconcile ks cilium-clustermesh-secret --with-source
      - flux -n flux-system --context={{.CONTEXT}} reconcile ks cilium-bgp-policy --with-source
      - flux -n flux-system --context={{.CONTEXT}} reconcile ks cilium-gatewayclass --with-source
    vars:
      CLUSTER: '{{.CLUSTER | default ""}}'
      CONTEXT: '{{.CONTEXT | default .CLUSTER}}'
    requires:
      vars: [CLUSTER]
    preconditions:
      - kubectl config get-contexts {{.CONTEXT}}
      - which flux

  reconcile-mesh-all:
    desc: Reconcile mesh components across all clusters
    cmds:
      - for cluster in $(echo {{.DEFAULT_CLUSTERS}} | tr ',' ' '); do \
          task kubernetes:reconcile-mesh CLUSTER=$cluster; \
        done
    silent: true

  validate:
    desc: Template manifests for a target scope [TARGET=infrastructure|workloads]
    cmds:
      - kustomize build {{.KUBERNETES_DIR}}/{{.TARGET}} --enable-helm
    vars:
      TARGET: '{{.TARGET | default "infrastructure"}}'
    preconditions:
      - test -d {{.KUBERNETES_DIR}}/{{.TARGET}}
      - which kustomize
